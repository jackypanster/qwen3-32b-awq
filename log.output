docker run -d \
  --runtime=nvidia --gpus=all --name coder \
  -v /home/llm/model/qwen/Qwen3-32B-AWQ:/model/Qwen3-32B-AWQ \
  -p 8888:8000 --cpuset-cpus 0-55 \
  --ulimit memlock=-1 --ulimit stack=67108864 --restart always --ipc=host \
  vllm/vllm-openai:v0.8.5 \
  --model /model/Qwen3-32B-AWQ --served-model-name coder \
  --tensor-parallel-size 4 --quantization awq --dtype auto \
  --max-model-len 32768 --max-num-batched-tokens 32768 \
  --gpu-memory-utilization 0.96 \
  --block-size 16 \
  --enable-prefix-caching \
  --swap-space 64 \
  --max-num-seqs 64
28904a3e8c28b4c9e04ff74e9b72dc8b28a436dacc72b5de347820b6c0079bf2
llm@llm-server:~$ docker logs -f coder
INFO 07-15 05:36:57 [__init__.py:239] Automatically detected platform cuda.
INFO 07-15 05:37:01 [api_server.py:1043] vLLM API server version 0.8.5
INFO 07-15 05:37:01 [api_server.py:1044] args: Namespace(host=None, port=8000, uvicorn_log_level='info', disable_uvicorn_access_log=False, allow_credentials=False, allowed_origins=['*'], allowed_methods=['*'], allowed_headers=['*'], api_key=None, lora_modules=None, prompt_adapters=None, chat_template=None, chat_template_content_format='auto', response_role='assistant', ssl_keyfile=None, ssl_certfile=None, ssl_ca_certs=None, enable_ssl_refresh=False, ssl_cert_reqs=0, root_path=None, middleware=[], return_tokens_as_token_ids=False, disable_frontend_multiprocessing=False, enable_request_id_headers=False, enable_auto_tool_choice=False, tool_call_parser=None, tool_parser_plugin='', model='/model/Qwen3-32B-AWQ', task='auto', tokenizer=None, hf_config_path=None, skip_tokenizer_init=False, revision=None, code_revision=None, tokenizer_revision=None, tokenizer_mode='auto', trust_remote_code=False, allowed_local_media_path=None, load_format='auto', download_dir=None, model_loader_extra_config={}, use_tqdm_on_load=True, config_format=<ConfigFormat.AUTO: 'auto'>, dtype='auto', max_model_len=32768, guided_decoding_backend='auto', reasoning_parser=None, logits_processor_pattern=None, model_impl='auto', distributed_executor_backend=None, pipeline_parallel_size=1, tensor_parallel_size=4, data_parallel_size=1, enable_expert_parallel=False, max_parallel_loading_workers=None, ray_workers_use_nsight=False, disable_custom_all_reduce=False, block_size=16, gpu_memory_utilization=0.96, swap_space=64.0, kv_cache_dtype='auto', num_gpu_blocks_override=None, enable_prefix_caching=True, prefix_caching_hash_algo='builtin', cpu_offload_gb=0, calculate_kv_scales=False, disable_sliding_window=False, use_v2_block_manager=True, seed=None, max_logprobs=20, disable_log_stats=False, quantization='awq', rope_scaling=None, rope_theta=None, hf_token=None, hf_overrides=None, enforce_eager=False, max_seq_len_to_capture=8192, tokenizer_pool_size=0, tokenizer_pool_type='ray', tokenizer_pool_extra_config={}, limit_mm_per_prompt={}, mm_processor_kwargs=None, disable_mm_preprocessor_cache=False, enable_lora=None, enable_lora_bias=False, max_loras=1, max_lora_rank=16, lora_extra_vocab_size=256, lora_dtype='auto', long_lora_scaling_factors=None, max_cpu_loras=None, fully_sharded_loras=False, enable_prompt_adapter=None, max_prompt_adapters=1, max_prompt_adapter_token=0, device='auto', speculative_config=None, ignore_patterns=[], served_model_name=['coder'], qlora_adapter_name_or_path=None, show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None, disable_async_output_proc=False, max_num_batched_tokens=32768, max_num_seqs=64, max_num_partial_prefills=1, max_long_partial_prefills=1, long_prefill_token_threshold=0, num_lookahead_slots=0, scheduler_delay_factor=0.0, preemption_mode=None, num_scheduler_steps=1, multi_step_stream_outputs=True, scheduling_policy='fcfs', enable_chunked_prefill=None, disable_chunked_mm_input=False, scheduler_cls='vllm.core.scheduler.Scheduler', override_neuron_config=None, override_pooler_config=None, compilation_config=None, kv_transfer_config=None, worker_cls='auto', worker_extension_cls='', generation_config='auto', override_generation_config=None, enable_sleep_mode=False, additional_config=None, enable_reasoning=False, disable_cascade_attn=False, disable_log_requests=False, max_log_len=None, disable_fastapi_docs=False, enable_prompt_tokens_details=False, enable_server_load_tracking=False)
INFO 07-15 05:37:10 [config.py:717] This model supports multiple tasks: {'generate', 'reward', 'score', 'embed', 'classify'}. Defaulting to 'generate'.
WARNING 07-15 05:37:11 [config.py:830] awq quantization is not fully optimized yet. The speed can be slower than non-quantized models.
WARNING 07-15 05:37:11 [arg_utils.py:1658] Compute Capability < 8.0 is not supported by the V1 Engine. Falling back to V0. 
INFO 07-15 05:37:12 [config.py:1770] Defaulting to use mp for distributed inference
WARNING 07-15 05:37:12 [config.py:1443] Possibly too large swap space. 256.00 GiB out of the 503.75 GiB total CPU memory is allocated for the swap space.
INFO 07-15 05:37:12 [api_server.py:246] Started engine process with PID 131
INFO 07-15 05:37:16 [__init__.py:239] Automatically detected platform cuda.
INFO 07-15 05:37:17 [llm_engine.py:240] Initializing a V0 LLM engine (v0.8.5) with config: model='/model/Qwen3-32B-AWQ', speculative_config=None, tokenizer='/model/Qwen3-32B-AWQ', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.float16, max_seq_len=32768, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=4, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=awq, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='auto', reasoning_backend=None), observability_config=ObservabilityConfig(show_hidden_metrics=False, otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=None, served_model_name=coder, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=True, chunked_prefill_enabled=False, use_async_output_proc=True, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"splitting_ops":[],"compile_sizes":[],"cudagraph_capture_sizes":[64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":64}, use_cached_outputs=True, 
WARNING 07-15 05:37:18 [multiproc_worker_utils.py:306] Reducing Torch parallelism from 28 threads to 1 to avoid unnecessary CPU contention. Set OMP_NUM_THREADS in the external environment to tune this value as needed.
INFO 07-15 05:37:19 [cuda.py:240] Cannot use FlashAttention-2 backend for Volta and Turing GPUs.
INFO 07-15 05:37:19 [cuda.py:289] Using XFormers backend.
INFO 07-15 05:37:22 [__init__.py:239] Automatically detected platform cuda.
INFO 07-15 05:37:22 [__init__.py:239] Automatically detected platform cuda.
INFO 07-15 05:37:22 [__init__.py:239] Automatically detected platform cuda.
(VllmWorkerProcess pid=197) INFO 07-15 05:37:24 [multiproc_worker_utils.py:225] Worker ready; awaiting tasks
(VllmWorkerProcess pid=196) INFO 07-15 05:37:24 [multiproc_worker_utils.py:225] Worker ready; awaiting tasks
(VllmWorkerProcess pid=198) INFO 07-15 05:37:24 [multiproc_worker_utils.py:225] Worker ready; awaiting tasks
(VllmWorkerProcess pid=197) INFO 07-15 05:37:25 [cuda.py:240] Cannot use FlashAttention-2 backend for Volta and Turing GPUs.
(VllmWorkerProcess pid=197) INFO 07-15 05:37:25 [cuda.py:289] Using XFormers backend.
(VllmWorkerProcess pid=196) INFO 07-15 05:37:25 [cuda.py:240] Cannot use FlashAttention-2 backend for Volta and Turing GPUs.
(VllmWorkerProcess pid=196) INFO 07-15 05:37:25 [cuda.py:289] Using XFormers backend.
(VllmWorkerProcess pid=198) INFO 07-15 05:37:25 [cuda.py:240] Cannot use FlashAttention-2 backend for Volta and Turing GPUs.
(VllmWorkerProcess pid=198) INFO 07-15 05:37:25 [cuda.py:289] Using XFormers backend.
(VllmWorkerProcess pid=196) INFO 07-15 05:37:27 [utils.py:1055] Found nccl from library libnccl.so.2
(VllmWorkerProcess pid=198) INFO 07-15 05:37:27 [utils.py:1055] Found nccl from library libnccl.so.2
(VllmWorkerProcess pid=196) INFO 07-15 05:37:27 [pynccl.py:69] vLLM is using nccl==2.21.5
(VllmWorkerProcess pid=198) INFO 07-15 05:37:27 [pynccl.py:69] vLLM is using nccl==2.21.5
(VllmWorkerProcess pid=197) INFO 07-15 05:37:27 [utils.py:1055] Found nccl from library libnccl.so.2
(VllmWorkerProcess pid=197) INFO 07-15 05:37:27 [pynccl.py:69] vLLM is using nccl==2.21.5
INFO 07-15 05:37:27 [utils.py:1055] Found nccl from library libnccl.so.2
INFO 07-15 05:37:27 [pynccl.py:69] vLLM is using nccl==2.21.5
WARNING 07-15 05:37:28 [custom_all_reduce.py:136] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
(VllmWorkerProcess pid=198) WARNING 07-15 05:37:28 [custom_all_reduce.py:136] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
(VllmWorkerProcess pid=196) WARNING 07-15 05:37:28 [custom_all_reduce.py:136] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
(VllmWorkerProcess pid=197) WARNING 07-15 05:37:28 [custom_all_reduce.py:136] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
INFO 07-15 05:37:28 [shm_broadcast.py:266] vLLM message queue communication handle: Handle(local_reader_ranks=[1, 2, 3], buffer_handle=(3, 4194304, 6, 'psm_d302e8b3'), local_subscribe_addr='ipc:///tmp/b7e77049-079e-4f5a-9c1c-776d5d6fcc86', remote_subscribe_addr=None, remote_addr_ipv6=False)
(VllmWorkerProcess pid=198) INFO 07-15 05:37:28 [parallel_state.py:1004] rank 3 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 3
INFO 07-15 05:37:28 [parallel_state.py:1004] rank 0 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 0
(VllmWorkerProcess pid=197) INFO 07-15 05:37:28 [parallel_state.py:1004] rank 2 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 2
(VllmWorkerProcess pid=196) INFO 07-15 05:37:28 [parallel_state.py:1004] rank 1 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 1
INFO 07-15 05:37:28 [model_runner.py:1108] Starting to load model /model/Qwen3-32B-AWQ...
(VllmWorkerProcess pid=196) INFO 07-15 05:37:28 [model_runner.py:1108] Starting to load model /model/Qwen3-32B-AWQ...
(VllmWorkerProcess pid=197) INFO 07-15 05:37:28 [model_runner.py:1108] Starting to load model /model/Qwen3-32B-AWQ...
(VllmWorkerProcess pid=198) INFO 07-15 05:37:28 [model_runner.py:1108] Starting to load model /model/Qwen3-32B-AWQ...
Loading safetensors checkpoint shards:   0% Completed | 0/4 [00:00<?, ?it/s]
Loading safetensors checkpoint shards:  25% Completed | 1/4 [00:00<00:02,  1.38it/s]
Loading safetensors checkpoint shards:  50% Completed | 2/4 [00:01<00:01,  1.09it/s]
Loading safetensors checkpoint shards:  75% Completed | 3/4 [00:02<00:00,  1.07it/s]
(VllmWorkerProcess pid=197) INFO 07-15 05:37:31 [loader.py:458] Loading weights took 3.31 seconds
Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:03<00:00,  1.17it/s]
Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:03<00:00,  1.15it/s]

INFO 07-15 05:37:32 [loader.py:458] Loading weights took 3.52 seconds
(VllmWorkerProcess pid=198) INFO 07-15 05:37:32 [loader.py:458] Loading weights took 3.60 seconds
(VllmWorkerProcess pid=197) INFO 07-15 05:37:32 [model_runner.py:1140] Model loading took 4.5804 GiB and 3.594453 seconds
(VllmWorkerProcess pid=196) INFO 07-15 05:37:32 [loader.py:458] Loading weights took 3.66 seconds
INFO 07-15 05:37:32 [model_runner.py:1140] Model loading took 4.5804 GiB and 3.848060 seconds
(VllmWorkerProcess pid=198) INFO 07-15 05:37:32 [model_runner.py:1140] Model loading took 4.5804 GiB and 3.901597 seconds
(VllmWorkerProcess pid=196) INFO 07-15 05:37:32 [model_runner.py:1140] Model loading took 4.5804 GiB and 3.955657 seconds
(VllmWorkerProcess pid=197) INFO 07-15 05:37:56 [worker.py:287] Memory profiling takes 23.72 seconds
(VllmWorkerProcess pid=197) INFO 07-15 05:37:56 [worker.py:287] the current vLLM instance can use total_gpu_memory (21.49GiB) x gpu_memory_utilization (0.96) = 20.63GiB
(VllmWorkerProcess pid=197) INFO 07-15 05:37:56 [worker.py:287] model weights take 4.58GiB; non_torch_memory takes 0.18GiB; PyTorch activation peak memory takes 2.74GiB; the rest of the memory reserved for KV Cache is 13.12GiB.
(VllmWorkerProcess pid=196) INFO 07-15 05:37:56 [worker.py:287] Memory profiling takes 23.77 seconds
(VllmWorkerProcess pid=196) INFO 07-15 05:37:56 [worker.py:287] the current vLLM instance can use total_gpu_memory (21.49GiB) x gpu_memory_utilization (0.96) = 20.63GiB
(VllmWorkerProcess pid=196) INFO 07-15 05:37:56 [worker.py:287] model weights take 4.58GiB; non_torch_memory takes 0.19GiB; PyTorch activation peak memory takes 2.74GiB; the rest of the memory reserved for KV Cache is 13.12GiB.
(VllmWorkerProcess pid=198) INFO 07-15 05:37:56 [worker.py:287] Memory profiling takes 23.82 seconds
(VllmWorkerProcess pid=198) INFO 07-15 05:37:56 [worker.py:287] the current vLLM instance can use total_gpu_memory (21.49GiB) x gpu_memory_utilization (0.96) = 20.63GiB
(VllmWorkerProcess pid=198) INFO 07-15 05:37:56 [worker.py:287] model weights take 4.58GiB; non_torch_memory takes 0.18GiB; PyTorch activation peak memory takes 2.74GiB; the rest of the memory reserved for KV Cache is 13.12GiB.
INFO 07-15 05:37:56 [worker.py:287] Memory profiling takes 23.90 seconds
INFO 07-15 05:37:56 [worker.py:287] the current vLLM instance can use total_gpu_memory (21.48GiB) x gpu_memory_utilization (0.96) = 20.63GiB
INFO 07-15 05:37:56 [worker.py:287] model weights take 4.58GiB; non_torch_memory takes 0.20GiB; PyTorch activation peak memory takes 2.74GiB; the rest of the memory reserved for KV Cache is 13.10GiB.
INFO 07-15 05:37:57 [executor_base.py:112] # cuda blocks: 13414, # CPU blocks: 65536
INFO 07-15 05:37:57 [executor_base.py:117] Maximum concurrency for 32768 tokens per request: 6.55x
(VllmWorkerProcess pid=197) INFO 07-15 05:38:40 [model_runner.py:1450] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 07-15 05:38:43 [model_runner.py:1450] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
(VllmWorkerProcess pid=198) INFO 07-15 05:38:43 [model_runner.py:1450] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
(VllmWorkerProcess pid=196) INFO 07-15 05:38:43 [model_runner.py:1450] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
(VllmWorkerProcess pid=197) INFO 07-15 05:38:54 [model_runner.py:1592] Graph capturing finished in 14 secs, took 0.37 GiB
Capturing CUDA graph shapes: 100%|██████████| 11/11 [00:11<00:00,  1.04s/it]
INFO 07-15 05:38:54 [model_runner.py:1592] Graph capturing finished in 11 secs, took 0.37 GiB
(VllmWorkerProcess pid=196) INFO 07-15 05:38:54 [model_runner.py:1592] Graph capturing finished in 11 secs, took 0.37 GiB
(VllmWorkerProcess pid=198) INFO 07-15 05:38:54 [model_runner.py:1592] Graph capturing finished in 11 secs, took 0.37 GiB
INFO 07-15 05:38:54 [llm_engine.py:437] init engine (profile, create kv cache, warmup model) took 81.99 seconds
WARNING 07-15 05:38:56 [config.py:1239] Default sampling parameters have been overridden by the model's Hugging Face generation config recommended from the model creator. If this is not intended, please relaunch vLLM instance with `--generation-config vllm`.
INFO 07-15 05:38:56 [serving_chat.py:118] Using default chat sampling params from model: {'temperature': 0.6, 'top_k': 20, 'top_p': 0.95}
INFO 07-15 05:38:56 [serving_completion.py:61] Using default completion sampling params from model: {'temperature': 0.6, 'top_k': 20, 'top_p': 0.95}
INFO 07-15 05:38:56 [api_server.py:1090] Starting vLLM API server on http://0.0.0.0:8000
INFO 07-15 05:38:56 [launcher.py:28] Available routes are:
INFO 07-15 05:38:56 [launcher.py:36] Route: /openapi.json, Methods: GET, HEAD
INFO 07-15 05:38:56 [launcher.py:36] Route: /docs, Methods: GET, HEAD
INFO 07-15 05:38:56 [launcher.py:36] Route: /docs/oauth2-redirect, Methods: GET, HEAD
INFO 07-15 05:38:56 [launcher.py:36] Route: /redoc, Methods: GET, HEAD
INFO 07-15 05:38:56 [launcher.py:36] Route: /health, Methods: GET
INFO 07-15 05:38:56 [launcher.py:36] Route: /load, Methods: GET
INFO 07-15 05:38:56 [launcher.py:36] Route: /ping, Methods: GET, POST
INFO 07-15 05:38:56 [launcher.py:36] Route: /tokenize, Methods: POST
INFO 07-15 05:38:56 [launcher.py:36] Route: /detokenize, Methods: POST
INFO 07-15 05:38:56 [launcher.py:36] Route: /v1/models, Methods: GET
INFO 07-15 05:38:56 [launcher.py:36] Route: /version, Methods: GET
INFO 07-15 05:38:56 [launcher.py:36] Route: /v1/chat/completions, Methods: POST
INFO 07-15 05:38:56 [launcher.py:36] Route: /v1/completions, Methods: POST
INFO 07-15 05:38:56 [launcher.py:36] Route: /v1/embeddings, Methods: POST
INFO 07-15 05:38:56 [launcher.py:36] Route: /pooling, Methods: POST
INFO 07-15 05:38:56 [launcher.py:36] Route: /score, Methods: POST
INFO 07-15 05:38:56 [launcher.py:36] Route: /v1/score, Methods: POST
INFO 07-15 05:38:56 [launcher.py:36] Route: /v1/audio/transcriptions, Methods: POST
INFO 07-15 05:38:56 [launcher.py:36] Route: /rerank, Methods: POST
INFO 07-15 05:38:56 [launcher.py:36] Route: /v1/rerank, Methods: POST
INFO 07-15 05:38:56 [launcher.py:36] Route: /v2/rerank, Methods: POST
INFO 07-15 05:38:56 [launcher.py:36] Route: /invocations, Methods: POST
INFO 07-15 05:38:56 [launcher.py:36] Route: /metrics, Methods: GET
INFO:     Started server process [1]
INFO:     Waiting for application startup.
INFO:     Application startup complete.


